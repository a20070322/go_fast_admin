// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminMenusColumns holds the columns for the "admin_menus" table.
	AdminMenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "path", Type: field.TypeString, Nullable: true},
		{Name: "path_action", Type: field.TypeString, Nullable: true},
		{Name: "router_path", Type: field.TypeString, Nullable: true},
		{Name: "icon", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "type", Type: field.TypeInt8, Nullable: true, Default: 0},
		{Name: "power_str", Type: field.TypeString, Nullable: true},
		{Name: "sort", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "fid", Type: field.TypeInt, Nullable: true},
		{Name: "is_external_link", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "is_show", Type: field.TypeBool, Nullable: true, Default: true},
		{Name: "is_enable", Type: field.TypeBool, Nullable: true, Default: false},
	}
	// AdminMenusTable holds the schema information for the "admin_menus" table.
	AdminMenusTable = &schema.Table{
		Name:        "admin_menus",
		Columns:     AdminMenusColumns,
		PrimaryKey:  []*schema.Column{AdminMenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// AdminRolesColumns holds the columns for the "admin_roles" table.
	AdminRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "is_enable", Type: field.TypeBool, Nullable: true, Default: false},
	}
	// AdminRolesTable holds the schema information for the "admin_roles" table.
	AdminRolesTable = &schema.Table{
		Name:        "admin_roles",
		Columns:     AdminRolesColumns,
		PrimaryKey:  []*schema.Column{AdminRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// AdminUsersColumns holds the columns for the "admin_users" table.
	AdminUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "avatar", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "is_enable", Type: field.TypeBool, Nullable: true, Default: false},
	}
	// AdminUsersTable holds the schema information for the "admin_users" table.
	AdminUsersTable = &schema.Table{
		Name:        "admin_users",
		Columns:     AdminUsersColumns,
		PrimaryKey:  []*schema.Column{AdminUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CasbinRulesColumns holds the columns for the "casbin_rules" table.
	CasbinRulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "ptype", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "v0", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "v1", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "v2", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "v3", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "v4", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "v5", Type: field.TypeString, Nullable: true, Default: ""},
	}
	// CasbinRulesTable holds the schema information for the "casbin_rules" table.
	CasbinRulesTable = &schema.Table{
		Name:        "casbin_rules",
		Columns:     CasbinRulesColumns,
		PrimaryKey:  []*schema.Column{CasbinRulesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// AdminRoleUserColumns holds the columns for the "admin_role_user" table.
	AdminRoleUserColumns = []*schema.Column{
		{Name: "admin_role_id", Type: field.TypeInt},
		{Name: "admin_user_id", Type: field.TypeUUID},
	}
	// AdminRoleUserTable holds the schema information for the "admin_role_user" table.
	AdminRoleUserTable = &schema.Table{
		Name:       "admin_role_user",
		Columns:    AdminRoleUserColumns,
		PrimaryKey: []*schema.Column{AdminRoleUserColumns[0], AdminRoleUserColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_role_user_admin_role_id",
				Columns:    []*schema.Column{AdminRoleUserColumns[0]},
				RefColumns: []*schema.Column{AdminRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "admin_role_user_admin_user_id",
				Columns:    []*schema.Column{AdminRoleUserColumns[1]},
				RefColumns: []*schema.Column{AdminUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AdminRoleMenuColumns holds the columns for the "admin_role_menu" table.
	AdminRoleMenuColumns = []*schema.Column{
		{Name: "admin_role_id", Type: field.TypeInt},
		{Name: "admin_menus_id", Type: field.TypeInt},
	}
	// AdminRoleMenuTable holds the schema information for the "admin_role_menu" table.
	AdminRoleMenuTable = &schema.Table{
		Name:       "admin_role_menu",
		Columns:    AdminRoleMenuColumns,
		PrimaryKey: []*schema.Column{AdminRoleMenuColumns[0], AdminRoleMenuColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_role_menu_admin_role_id",
				Columns:    []*schema.Column{AdminRoleMenuColumns[0]},
				RefColumns: []*schema.Column{AdminRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "admin_role_menu_admin_menus_id",
				Columns:    []*schema.Column{AdminRoleMenuColumns[1]},
				RefColumns: []*schema.Column{AdminMenusColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminMenusTable,
		AdminRolesTable,
		AdminUsersTable,
		CasbinRulesTable,
		AdminRoleUserTable,
		AdminRoleMenuTable,
	}
)

func init() {
	AdminRoleUserTable.ForeignKeys[0].RefTable = AdminRolesTable
	AdminRoleUserTable.ForeignKeys[1].RefTable = AdminUsersTable
	AdminRoleMenuTable.ForeignKeys[0].RefTable = AdminRolesTable
	AdminRoleMenuTable.ForeignKeys[1].RefTable = AdminMenusTable
}
