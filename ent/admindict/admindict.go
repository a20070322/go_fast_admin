// Code generated by entc, DO NOT EDIT.

package admindict

import (
	"time"
)

const (
	// Label holds the string label denoting the admindict type in the database.
	Label = "admin_dict"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldDictType holds the string denoting the dict_type field in the database.
	FieldDictType = "dict_type"
	// FieldDictName holds the string denoting the dict_name field in the database.
	FieldDictName = "dict_name"
	// FieldRemarks holds the string denoting the remarks field in the database.
	FieldRemarks = "remarks"
	// FieldIsEnable holds the string denoting the is_enable field in the database.
	FieldIsEnable = "is_enable"
	// EdgeKey holds the string denoting the key edge name in mutations.
	EdgeKey = "key"
	// Table holds the table name of the admindict in the database.
	Table = "admin_dicts"
	// KeyTable is the table the holds the key relation/edge.
	KeyTable = "admin_dict_keys"
	// KeyInverseTable is the table name for the AdminDictKey entity.
	// It exists in this package in order to avoid circular dependency with the "admindictkey" package.
	KeyInverseTable = "admin_dict_keys"
	// KeyColumn is the table column denoting the key relation/edge.
	KeyColumn = "admin_dict_key"
)

// Columns holds all SQL columns for admindict fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldDictType,
	FieldDictName,
	FieldRemarks,
	FieldIsEnable,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
